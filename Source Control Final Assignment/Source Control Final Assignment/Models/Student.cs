//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Source_Control_Final_Assignment.Models
{
    using Source_Control_Final_Assignment.Custom_Validation;
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    

    public partial class Student
    {
        public int Id { get; set; }
        [Required(ErrorMessage ="First Name is required")]
        public string FirstName { get; set; }

        [Required(ErrorMessage ="Last Name is required")]
        public string LastName { get; set; }

        [Required(ErrorMessage ="Email is required")]
        [DataType(DataType.EmailAddress)]
        [RegularExpression("^([0-9a-zA-Z]([-\\.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})$",ErrorMessage ="Invalid Email")]
        public string Email { get; set; }
      

        [Required(ErrorMessage ="Username is required")]
        public string UserName { get; set; }
        
        [Required(ErrorMessage ="Password is required")]
        [DataType(DataType.Password)]
        public string Password { get; set; }

        [Required(ErrorMessage = "Password does not match")]
        [DataType(DataType.Password)]
        [Compare("Password")]
        public string ConfirmPassword { get; set; }
        
        [Required(ErrorMessage ="Contact Number is required")]
        [DataType(DataType.PhoneNumber)]
        public int ContactNo { get; set; }
        
        [Required(ErrorMessage ="Age is required")]
        [Range(18,40,ErrorMessage ="Age must be between 18 to 40")]
        public int Age { get; set; }

        [Required(ErrorMessage = "Please enter hire date")]
        [Display(Name = "Hire Date")]
        [DisplayFormat(DataFormatString = "{0:d}", ApplyFormatInEditMode = true)]
        [CustomJoiningDate(ErrorMessage = "Hire Date must be less than or equal to Today's Date")]
        public DateTime JoiningDate { get; set; }

        [DataType(DataType.Upload)]
        [Display(Name = "Upload File")]
        [Required(ErrorMessage = "Please choose file to upload.")]
        public string ImagePath { get; set; }
    }
}
